"""Add Color model and listing_colors join table

Revision ID: 23996d6876d9
Revises: 22e3ffe845bb
Create Date: 2024-12-27 12:09:58.940365

"""

from alembic import op
import sqlalchemy as sa
import os

environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")

# revision identifiers, used by Alembic.
revision = "23996d6876d9"
down_revision = "22e3ffe845bb"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "colors",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("front_image_url", sa.String(length=500), nullable=False),
        sa.Column("back_image_url", sa.String(length=500), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    if environment == "production":
        op.execute(f"ALTER TABLE colors SET SCHEMA {SCHEMA};")
    op.create_table(
        "sizes",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    if environment == "production":
        op.execute(f"ALTER TABLE sizes SET SCHEMA {SCHEMA};")
    op.create_table(
        "listing_colors",
        sa.Column("listing_id", sa.Integer(), nullable=False),
        sa.Column("color_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["color_id"],
            ["colors.id"],
        ),
        sa.ForeignKeyConstraint(
            ["listing_id"],
            ["listings.id"],
        ),
        sa.PrimaryKeyConstraint("listing_id", "color_id"),
    )
    if environment == "production":
        op.execute(f"ALTER TABLE listing_colors SET SCHEMA {SCHEMA};")
    op.create_table(
        "listing_sizes",
        sa.Column("listing_id", sa.Integer(), nullable=False),
        sa.Column("size_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["listing_id"],
            ["listings.id"],
        ),
        sa.ForeignKeyConstraint(
            ["size_id"],
            ["sizes.id"],
        ),
        sa.PrimaryKeyConstraint("listing_id", "size_id"),
    )
    if environment == "production":
        op.execute(f"ALTER TABLE listing_sizes SET SCHEMA {SCHEMA};")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("listing_sizes")
    op.drop_table("listing_colors")
    op.drop_table("sizes")
    op.drop_table("colors")
    # ### end Alembic commands ###
